name: Draft a new release

on:
  push:
    branches:
      - master

jobs:
  draft_release:
    name: Update the next release draft for the project
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the project into the local workspace
        uses: actions/checkout@v2

      # Create a new release draft using the GitHub releases feature.
      # Include release notes that correspond to the contents of the
      # changelog for this release.
      # Action: https://github.com/release-drafter/release-drafter
      - name: Draft a new GitHub release with release notes
        id: github_release
        uses: release-drafter/release-drafter@v5
        with:
          config-name: release-drafter.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Create a new milestone corresponding to the next version release
      # of the project, as established by the release drafter.
      # Action: https://github.com/marketplace/actions/create-milestone
      - name: Create a milestone corresponding to the release
        id: create_milestone
        uses: WyriHaximus/github-action-create-milestone@master
        with:
          title: "Release ${{ env.NEXT_TAG }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEXT_TAG: ${{ steps.github_release.outputs.tag_name }}

      # Create a changelog for the recent versions of the project
      # using the github_changelog_generator tool. This requires first
      # installing Ruby in the environment. The changelog generator is
      # run using the script and config in generate_changelog.sh
      # Software: https://github.com/github-changelog-generator/github-changelog-generator
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
      - name: Install github_changelog_generator
        run: gem install github_changelog_generator
      - name: Run changelog generator
        id: generate_changelog
        run: |
          .github/scripts/generate_changelog.sh

          echo "Generated changelog:"
          cat CHANGELOG.md
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEXT_TAG: ${{ steps.github_release.outputs.tag_name }}
      
      # Commit the newly-generated changelog to the repository as a
      # standalone commit.
      # Action: https://github.com/marketplace/actions/add-commit
      - name: Commit the update to the changelog
        uses: EndBug/add-and-commit@v8.0.1
        with:
          add: "CHANGELOG.md"
          message: "chore: update changelog for ${{ env.NEXT_TAG }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEXT_TAG: ${{ steps.github_release.outputs.tag_name }}
